class Solution {
    public void rotate(int[] nums, int k) {
        k = k % nums.length;
        reverse(nums, 0, nums.length - 1);
        reverse(nums, 0, k - 1);
        reverse(nums, k, nums.length - 1);
    }

    public int[] reverse(int[] nums, int start, int end) {
        while(start < end) {
            int temp = nums[start];
            nums[start] = nums[end];
            nums[end] = temp;
            start ++;
            end --;
        }
        return nums;
    }
}

class Solution {
    public void rotate(int[] nums, int k) {
        int n = nums.length;
        k = k % n;
        int rotateNum = nums[0];
        int nextIdx = 0;
        int count = 0;
        for(int i = 0; count < n; i ++) {
            nextIdx = i;
            rotateNum = nums[nextIdx];

            while(true) {
                int newIdx = ( nextIdx + k ) % n;

                int temp = nums[newIdx]; 
                nums[newIdx] = rotateNum; 
                nextIdx = newIdx; 
                rotateNum = temp; 
                count += 1;
                if(nextIdx == i) {
                    break;
                }
            }
        }
    }
}
