class Solution {
    public int[] topKFrequent(int[] nums, int k) {
        Map<Integer, Integer> frequency = new HashMap<>();
        
        for(int num: nums) {
            frequency.put(num, frequency.getOrDefault(num, 0) + 1);
        }
    
        PriorityQueue<int[]> minHeap = new PriorityQueue<>((a, b) -> Integer.compare(a[1], b[1]));

        for(Map.Entry<Integer, Integer> entry: frequency.entrySet()) {
            minHeap.add(new int[]{entry.getKey(), entry.getValue()});
            if(minHeap.size() > k) {
                minHeap.poll();
            }
        }

        int[] res = new int[k];
        int idx = 0;

        while(!minHeap.isEmpty()) {
            res[idx] = minHeap.poll()[0];
            idx ++;
        }

        return res;
    }
}
