class Solution {
    public int calculate(String s) {
        Deque<Integer> stack = new ArrayDeque<>();
        int num = 0;
        char prevOperator = '+';

        for(int i = 0; i <= s.length(); i ++) {
            char c = i < s.length() ? s.charAt(i) : '\0';

            if(Character.isDigit(c)) {
                num = num * 10 + (c - '0');
            } 

            if(!Character.isDigit(c) && c != ' ') {
                if(prevOperator == '+') stack.offer(num);
                if(prevOperator == '-') stack.offer(-num);
                if(prevOperator == '*') stack.offer(stack.pollLast() * num);
                if(prevOperator == '/') stack.offer(stack.pollLast() / num);
                
                prevOperator = c;
                num = 0;
            }
        }
        int res = 0;
        while(!stack.isEmpty()) {
            res += stack.pollLast();
        }

        return res;
    }
}
